name: CI/CD for Backend

on:
  push:
    branches:
      - main  # Déclenche le workflow sur les pushes à la branche principale

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupérer le code source depuis le dépôt
      - name: Checkout backend code
        uses: actions/checkout@v3

      # Étape 2: Se connecter à Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Étape 3: Construire l'image Docker pour le backend
      - name: Build Docker image for backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tickly-back:latest -f Dockerfile .

      # Étape 4: Vérifier le contenu du dossier dist dans l'image
      - name: Check build output
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/tickly-back:latest ls -la /app/dist/src
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/tickly-back:latest ls -la /app/dist/prisma
      # Étape 5: Pousser l'image Docker sur Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/tickly-back:latest

      # Étape 6: Installer sshpass
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      # Étape 7: Déployer sur le VPS
      - name: Deploy to VPS
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << 'EOF'
            cd /root/tickly
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d
          EOF

      # Étape 8: Exécuter les migrations Prisma
      - name: Run Prisma Migrations
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << 'EOF'
            cd /root/tickly
            docker exec tickly-back npx prisma migrate deploy
          EOF

      # Étape 9: Vérifier l'état des conteneurs sur le VPS
      - name: Check Docker container status
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} "docker ps"
